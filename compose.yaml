services:
  postgres:
    image: 'postgres:latest'
    container_name: ems-postgres
    environment:
      - POSTGRES_DB=Events-Management-System
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USERNAME}
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USERNAME}"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - ems-network
  keycloak:
    build:
      context: keycloak/.
    container_name: ems-keycloak
    command:
      - start-dev
      - --import-realm
      - --features=scripts,admin-fine-grained-authz
    ports:
      - '8080:8080'
    environment:
      - KEYCLOAK_ADMIN=${KEYCLOAK_USERNAME}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_PASSWORD}
      - KC_HTTP_PORT=8080
      - KC_HOSTNAME_PORT=8080
      - KC_HTTP_ENABLED=true
      - KC_HOSTNAME_STRICT=false
      - KC_PROXY=edge
      - KC_FRONTEND_URL=http://keycloak:8080
      - KC_HOSTNAME=keycloak
    volumes:
      - ./Keycloak/realm.json:/opt/keycloak/data/import/realm.json
    networks:
      - ems-network

  backend:
    container_name: ems-backend
    build:
      context: .
    ports:
      - "8081:8081"
    environment:
      - POSTGRES_USERNAME=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - SECRET_KEY=${SECRET_KEY}
      - ISSUER_URI=${ISSUER_URI}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ems-network
volumes:
  postgres_data:
networks:
  ems-network:
    driver: bridge
