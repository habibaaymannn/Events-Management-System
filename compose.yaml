services:
  postgres:
    container_name: ems-postgres
    image: 'postgres:latest'
    environment:
      POSTGRES_DB: Events-Management-System
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USERNAME}"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - ems-network

  keycloak:
    container_name: ems-keycloak
    build:
      context: Keycloak/.
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
    ports:
      - '8080:8080'
    volumes:
      - ./Keycloak/realm.json:/opt/keycloak/data/import/realm.json
    networks:
      - ems-network
    command:
      - start-dev
      - --import-realm
      - --features=scripts,admin-fine-grained-authz

  backend:
    container_name: ems-backend
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8180:8080"
    environment:
      ISSUER_URI: 'http://keycloak:8080/realms/EMS-realm'
      #      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
    depends_on:
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_started
#      config-server:
#        condition: service_healthy
    networks:
      - ems-network
#  config-server:
#    build:
#      context: config-server/.
#    container_name: ems-config-server
#    ports:
#      - "8889:8888"
#    environment:
#      - SPRING_APPLICATION_NAME=config-server
#    networks:
#      - ems-network
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
#      interval: 5s
#      retries: 10
#      timeout: 5s
    env_file:
      - .env

volumes:
  postgres_data:
    name: ems-postgres-data
networks:
  ems-network:
    driver: bridge