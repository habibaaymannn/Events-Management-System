services:
  postgres:
    container_name: ems-postgres
    image: 'postgres:latest'
    environment:
      POSTGRES_DB: ems_dev
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-multiple-dbs.sql:/docker-entrypoint-initdb.d/init-multiple-dbs.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USERNAME}"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - ems-network

  keycloak:
    container_name: ems-keycloak
    build:
      context: Keycloak/.
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_HOSTNAME_URL: http://localhost:8080
      KC_HOSTNAME_ADMIN_URL: http://localhost:8080
      KC_HOSTNAME_STRICT: "false"
      
    ports:
      - '8080:8080'
    volumes:
      - ./Keycloak/realm.json:/opt/keycloak/data/import/realm.json
    networks:
      - ems-network
    command:
      - start-dev
      - --import-realm
      - --features=preview,scripts,admin-fine-grained-authz
      - --spi-import-export-import-strategy=OVERWRITE_EXISTING

  backend:
    container_name: ems-backend
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8180:8180"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      ISSUER_URI: http://keycloak:8080/realms/EMS-realm
      #      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      # Keycloak for backend (inside Docker network)
      KEYCLOAK_BASE_URL: ${KEYCLOAK_BASE_URL}         # -> http://keycloak:8080
      KEYCLOAK_REALM: ${KEYCLOAK_REALM}               # -> EMS-realm

      # Admin mode: ROPC with realm admin user admin1/adminpass
      KEYCLOAK_ADMIN_CLIENT_ID: ${KEYCLOAK_ADMIN_CLIENT_ID}       # admin-cli (no secret)
      KEYCLOAK_ADMIN_CLIENT_SECRET: ${KEYCLOAK_ADMIN_CLIENT_SECRET}
      KEYCLOAK_ADMIN_USERNAME: ${KEYCLOAK_ADMIN_USERNAME}         # admin1
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}    
    depends_on:
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_started
    networks:
      - ems-network
    env_file:
      - .env

  frontend:
    container_name: ems-frontend
    build: ./front-end
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_KEYCLOAK_BASE_URL=http://localhost:8080
      - REACT_APP_KEYCLOAK_REALM=EMS-realm
      - REACT_APP_KEYCLOAK_CLIENT_ID=ems-frontend
      - REACT_APP_API_BASE=http://localhost:8180
    depends_on:
      - keycloak
      - backend
    networks:
      - ems-network
volumes:
  postgres_data:
    name: ems-postgres-data
networks:
  ems-network:
    driver: bridge

#  config-server:
#    build:
#      context: config-server/.
#    container_name: ems-config-server
#    ports:
#      - "8889:8888"
#    environment:
#      - SPRING_APPLICATION_NAME=config-server
#    networks:
#      - ems-network
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
#      interval: 5s
#      retries: 10
#      timeout: 5s
